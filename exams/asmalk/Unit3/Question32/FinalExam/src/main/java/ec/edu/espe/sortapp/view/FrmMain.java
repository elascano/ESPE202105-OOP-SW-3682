package ec.edu.espe.sortapp.view;

import ec.edu.espe.sortapp.controller.MainController;
import ec.edu.espe.sortapp.core.SortingContext.SortAlgorithm;
import ec.edu.espe.sortapp.model.SortedEntry;
import java.util.Arrays;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.swing.JOptionPane;

/**
 *
 * @author
 */
public class FrmMain extends javax.swing.JFrame {
    private final MainController controller;
    
    /**
     * Creates new form FrmMain
     * @param controller
     */
    public FrmMain(MainController controller) {
        this.controller = controller;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtOutput = new javax.swing.JTextField();
        btnSort = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblAlgorithmName = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Numbers separated by comma:");

        jLabel2.setText("Ordered output:");

        txtOutput.setEnabled(false);

        btnSort.setText("Sort");
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });

        jLabel3.setText("Used algorithm:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtInput)
                    .addComponent(txtOutput)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblAlgorithmName)))
                        .addGap(0, 123, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblAlgorithmName))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSort)
                    .addComponent(btnSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean isValidInput(String input) {
        return input.matches("^[0-9](,[0-9])*$");
    }
    
    private SortedEntry getSortedEntry() {
        String inputText = txtInput.getText();
        
        if (inputText.trim().isEmpty() || !isValidInput(inputText)) {
            return null;
        }
        
        int[] input = Stream.of(inputText.split(","))
            .map(String::trim)
            .mapToInt(Integer::parseInt)
            .toArray();
        
        int sorted[] = controller.sort(input);
        
        SortAlgorithm algorithm = controller.getSortingContext().getSortAlgorithm(sorted.length);
        SortedEntry entry = new SortedEntry();
        String algorithmName;
        
        if (algorithm == SortAlgorithm.BubbleSortAlgorithm) {
            algorithmName = "Bubble sort";
        } else if (algorithm == SortAlgorithm.InsertionSortAlgorithm) {
            algorithmName = "Insertion sort";
        } else {
            algorithmName = "Quick sort";
        }
        
        entry.setInput(input);
        entry.setOutput(sorted);
        entry.setAlgorithm(algorithmName);
        
        return entry;
    }
    
    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        SortedEntry entry = getSortedEntry();
        
        if (entry == null) {
            JOptionPane.showMessageDialog(
                rootPane,
                "Wrong format for input content, please enter numbers separated by comma",
                "Bad Format",
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }
        
        String outputText = Arrays.stream(entry.getOutput())
            .mapToObj(String::valueOf)
            .collect(Collectors.joining(", "));
        
        txtOutput.setText(outputText);
        lblAlgorithmName.setText(entry.getAlgorithm());
    }//GEN-LAST:event_btnSortActionPerformed
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        SortedEntry entry = getSortedEntry();
        
        if (entry == null) {
            JOptionPane.showMessageDialog(
                rootPane,
                "Wrong format for input content, please enter numbers separated by comma",
                "Bad Format",
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }
        
        JOptionPane.showMessageDialog(
            rootPane,
            "sort entry saved",
            "Success",
            JOptionPane.INFORMATION_MESSAGE
        );
        
        String outputText = Arrays.stream(entry.getOutput())
            .mapToObj(String::valueOf)
            .collect(Collectors.joining(", "));
        
        txtOutput.setText(outputText);
        lblAlgorithmName.setText(entry.getAlgorithm());
        controller.save(entry);
    }//GEN-LAST:event_btnSaveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblAlgorithmName;
    private javax.swing.JTextField txtInput;
    private javax.swing.JTextField txtOutput;
    // End of variables declaration//GEN-END:variables
}
